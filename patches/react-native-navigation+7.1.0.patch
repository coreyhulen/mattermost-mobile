diff --git a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java
index 3bfbc0b..cdb0d05 100644
--- a/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java
+++ b/node_modules/react-native-navigation/lib/android/app/src/main/java/com/reactnativenavigation/react/NavigationModule.java
@@ -55,14 +55,18 @@ public class NavigationModule extends ReactContextBaseJavaModule {
         reactContext.addLifecycleEventListener(new LifecycleEventListenerAdapter() {
             @Override
             public void onHostResume() {
-                eventEmitter = new EventEmitter(reactContext);
-                navigator().setEventEmitter(eventEmitter);
-                layoutFactory.init(
-                        activity(),
-                        eventEmitter,
-                        navigator().getChildRegistry(),
-                        ((NavigationApplication) activity().getApplication()).getExternalComponents()
-                );
+                try {
+                    eventEmitter = new EventEmitter(reactContext);
+                    navigator().setEventEmitter(eventEmitter);
+                    layoutFactory.init(
+                            activity(),
+                            eventEmitter,
+                            navigator().getChildRegistry(),
+                            ((NavigationApplication) activity().getApplication()).getExternalComponents()
+                    );
+                } catch (ClassCastException e) {
+                    // The most current activity is not a NavigationActivity
+                }
             }
         });
     }
@@ -196,8 +200,12 @@ public class NavigationModule extends ReactContextBaseJavaModule {
 
     protected void handle(Runnable task) {
         UiThread.post(() -> {
-            if (getCurrentActivity() != null && !activity().isFinishing()) {
-                task.run();
+            try {
+                if (getCurrentActivity() != null && !activity().isFinishing()) {
+                    task.run();
+                }
+            } catch (ClassCastException e) {
+                // The most current activity is not a NavigationActivity
             }
         });
     }
diff --git a/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m b/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
index f7aba70..f8d3f38 100644
--- a/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNCommandsHandler.m
@@ -312,10 +312,9 @@ - (void)dismissAllModals:(NSDictionary *)mergeOptions commandId:(NSString*)comma
 	[CATransaction begin];
 	[CATransaction setCompletionBlock:^{
 		[self->_eventEmitter sendOnNavigationCommandCompletion:dismissAllModals commandId:commandId];
-		completion();
 	}];
 	RNNNavigationOptions* options = [[RNNNavigationOptions alloc] initWithDict:mergeOptions];
-	[_modalManager dismissAllModalsAnimated:[options.animations.dismissModal.enable getWithDefaultValue:YES] completion:nil];
+	[_modalManager dismissAllModalsAnimated:[options.animations.dismissModal.enable getWithDefaultValue:YES] completion:completion];
 	
 	[CATransaction commit];
 }
diff --git a/node_modules/react-native-navigation/lib/ios/RNNViewLocation.m b/node_modules/react-native-navigation/lib/ios/RNNViewLocation.m
index f98f7a1..26ecb83 100644
--- a/node_modules/react-native-navigation/lib/ios/RNNViewLocation.m
+++ b/node_modules/react-native-navigation/lib/ios/RNNViewLocation.m
@@ -31,11 +31,7 @@ - (CGFloat)getCornerRadius:(UIView *)view {
 
 - (CATransform3D)getTransform:(UIView *)view {
     if (view) {
-        if (!CATransform3DEqualToTransform(view.layer.transform, CATransform3DIdentity)) {
-            return view.layer.transform;
-        } else {
-            return [self getTransform:view.superview];
-        }
+        return view.layer.transform;
     }
 
     return CATransform3DIdentity;
