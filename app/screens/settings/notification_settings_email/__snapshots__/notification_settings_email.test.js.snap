// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NotificationSettingsEmail should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NotificationSettingsEmail
    currentUserId="current_user_id"
    emailInterval="30"
    enableEmailBatching={false}
    navigator={
      Object {
        "setOnNavigatorEvent": [Function],
      }
    }
    savePreferences={[Function]}
    sendEmailNotifications={true}
    siteName="Mattermost"
    theme={
      Object {
        "centerChannelBg": "#aaa",
        "centerChannelColor": "#aaa",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Connect(StatusBar) />,
        <ScrollView
          alwaysBounceVertical={false}
          contentContainerStyle={
            Object {
              "paddingVertical": 35,
            }
          }
          style={
            Object {
              "backgroundColor": undefined,
              "flex": 1,
            }
          }
        >
          <section
            disableFooter={false}
            footerDefaultMessage="Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes."
            footerId="user.settings.notifications.emailInfo"
            footerValues={
              Object {
                "siteName": "Mattermost",
              }
            }
            headerDefaultMessage="SEND EMAIL NOTIFICATIONS"
            headerId="mobile.notification_settings.email.send"
            theme={
              Object {
                "centerChannelBg": "#aaa",
                "centerChannelColor": "#aaa",
              }
            }
          >
            <Component>
              <sectionItem
                action={[Function]}
                actionType="select"
                actionValue="30"
                label={
                  <InjectIntl(FormattedText)
                    defaultMessage="Immediately"
                    id="user.settings.notifications.email.immediately"
                  />
                }
                selected={true}
                theme={
                  Object {
                    "centerChannelBg": "#aaa",
                    "centerChannelColor": "#aaa",
                  }
                }
              />
              <Component
                style={
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                    "height": 1,
                    "marginLeft": 15,
                  }
                }
              />
              <sectionItem
                action={[Function]}
                actionType="select"
                actionValue="0"
                label={
                  <InjectIntl(FormattedText)
                    defaultMessage="Never"
                    id="user.settings.notifications.email.never"
                  />
                }
                selected={false}
                theme={
                  Object {
                    "centerChannelBg": "#aaa",
                    "centerChannelColor": "#aaa",
                  }
                }
              />
            </Component>
          </section>
        </ScrollView>,
      ],
      "style": Object {
        "backgroundColor": "#aaa",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "alwaysBounceVertical": false,
          "children": <section
            disableFooter={false}
            footerDefaultMessage="Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes."
            footerId="user.settings.notifications.emailInfo"
            footerValues={
              Object {
                "siteName": "Mattermost",
              }
            }
            headerDefaultMessage="SEND EMAIL NOTIFICATIONS"
            headerId="mobile.notification_settings.email.send"
            theme={
              Object {
                "centerChannelBg": "#aaa",
                "centerChannelColor": "#aaa",
              }
            }
          >
            <Component>
              <sectionItem
                action={[Function]}
                actionType="select"
                actionValue="30"
                label={
                  <InjectIntl(FormattedText)
                    defaultMessage="Immediately"
                    id="user.settings.notifications.email.immediately"
                  />
                }
                selected={true}
                theme={
                  Object {
                    "centerChannelBg": "#aaa",
                    "centerChannelColor": "#aaa",
                  }
                }
              />
              <Component
                style={
                  Object {
                    "backgroundColor": undefined,
                    "flex": 1,
                    "height": 1,
                    "marginLeft": 15,
                  }
                }
              />
              <sectionItem
                action={[Function]}
                actionType="select"
                actionValue="0"
                label={
                  <InjectIntl(FormattedText)
                    defaultMessage="Never"
                    id="user.settings.notifications.email.never"
                  />
                }
                selected={false}
                theme={
                  Object {
                    "centerChannelBg": "#aaa",
                    "centerChannelColor": "#aaa",
                  }
                }
              />
            </Component>
          </section>,
          "contentContainerStyle": Object {
            "paddingVertical": 35,
          },
          "style": Object {
            "backgroundColor": undefined,
            "flex": 1,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Component>
                <sectionItem
                  action={[Function]}
                  actionType="select"
                  actionValue="30"
                  label={
                    <InjectIntl(FormattedText)
                      defaultMessage="Immediately"
                      id="user.settings.notifications.email.immediately"
                    />
                  }
                  selected={true}
                  theme={
                    Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    }
                  }
                />
                <Component
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "flex": 1,
                      "height": 1,
                      "marginLeft": 15,
                    }
                  }
                />
                <sectionItem
                  action={[Function]}
                  actionType="select"
                  actionValue="0"
                  label={
                    <InjectIntl(FormattedText)
                      defaultMessage="Never"
                      id="user.settings.notifications.email.never"
                    />
                  }
                  selected={false}
                  theme={
                    Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    }
                  }
                />
              </Component>,
              false,
            ],
            "disableFooter": false,
            "footerDefaultMessage": "Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes.",
            "footerId": "user.settings.notifications.emailInfo",
            "footerValues": Object {
              "siteName": "Mattermost",
            },
            "headerDefaultMessage": "SEND EMAIL NOTIFICATIONS",
            "headerId": "mobile.notification_settings.email.send",
            "theme": Object {
              "centerChannelBg": "#aaa",
              "centerChannelColor": "#aaa",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <sectionItem
                    action={[Function]}
                    actionType="select"
                    actionValue="30"
                    label={
                      <InjectIntl(FormattedText)
                        defaultMessage="Immediately"
                        id="user.settings.notifications.email.immediately"
                      />
                    }
                    selected={true}
                    theme={
                      Object {
                        "centerChannelBg": "#aaa",
                        "centerChannelColor": "#aaa",
                      }
                    }
                  />,
                  <Component
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "flex": 1,
                        "height": 1,
                        "marginLeft": 15,
                      }
                    }
                  />,
                  false,
                  <sectionItem
                    action={[Function]}
                    actionType="select"
                    actionValue="0"
                    label={
                      <InjectIntl(FormattedText)
                        defaultMessage="Never"
                        id="user.settings.notifications.email.never"
                      />
                    }
                    selected={false}
                    theme={
                      Object {
                        "centerChannelBg": "#aaa",
                        "centerChannelColor": "#aaa",
                      }
                    }
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "action": [Function],
                    "actionType": "select",
                    "actionValue": "30",
                    "label": <InjectIntl(FormattedText)
                      defaultMessage="Immediately"
                      id="user.settings.notifications.email.immediately"
                    />,
                    "selected": true,
                    "theme": Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "style": Object {
                      "backgroundColor": undefined,
                      "flex": 1,
                      "height": 1,
                      "marginLeft": 15,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                false,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "action": [Function],
                    "actionType": "select",
                    "actionValue": "0",
                    "label": <InjectIntl(FormattedText)
                      defaultMessage="Never"
                      id="user.settings.notifications.email.never"
                    />,
                    "selected": false,
                    "theme": Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        "type": [MockFunction],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Connect(StatusBar) />,
          <ScrollView
            alwaysBounceVertical={false}
            contentContainerStyle={
              Object {
                "paddingVertical": 35,
              }
            }
            style={
              Object {
                "backgroundColor": undefined,
                "flex": 1,
              }
            }
          >
            <section
              disableFooter={false}
              footerDefaultMessage="Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes."
              footerId="user.settings.notifications.emailInfo"
              footerValues={
                Object {
                  "siteName": "Mattermost",
                }
              }
              headerDefaultMessage="SEND EMAIL NOTIFICATIONS"
              headerId="mobile.notification_settings.email.send"
              theme={
                Object {
                  "centerChannelBg": "#aaa",
                  "centerChannelColor": "#aaa",
                }
              }
            >
              <Component>
                <sectionItem
                  action={[Function]}
                  actionType="select"
                  actionValue="30"
                  label={
                    <InjectIntl(FormattedText)
                      defaultMessage="Immediately"
                      id="user.settings.notifications.email.immediately"
                    />
                  }
                  selected={true}
                  theme={
                    Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    }
                  }
                />
                <Component
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "flex": 1,
                      "height": 1,
                      "marginLeft": 15,
                    }
                  }
                />
                <sectionItem
                  action={[Function]}
                  actionType="select"
                  actionValue="0"
                  label={
                    <InjectIntl(FormattedText)
                      defaultMessage="Never"
                      id="user.settings.notifications.email.never"
                    />
                  }
                  selected={false}
                  theme={
                    Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    }
                  }
                />
              </Component>
            </section>
          </ScrollView>,
        ],
        "style": Object {
          "backgroundColor": "#aaa",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alwaysBounceVertical": false,
            "children": <section
              disableFooter={false}
              footerDefaultMessage="Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes."
              footerId="user.settings.notifications.emailInfo"
              footerValues={
                Object {
                  "siteName": "Mattermost",
                }
              }
              headerDefaultMessage="SEND EMAIL NOTIFICATIONS"
              headerId="mobile.notification_settings.email.send"
              theme={
                Object {
                  "centerChannelBg": "#aaa",
                  "centerChannelColor": "#aaa",
                }
              }
            >
              <Component>
                <sectionItem
                  action={[Function]}
                  actionType="select"
                  actionValue="30"
                  label={
                    <InjectIntl(FormattedText)
                      defaultMessage="Immediately"
                      id="user.settings.notifications.email.immediately"
                    />
                  }
                  selected={true}
                  theme={
                    Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    }
                  }
                />
                <Component
                  style={
                    Object {
                      "backgroundColor": undefined,
                      "flex": 1,
                      "height": 1,
                      "marginLeft": 15,
                    }
                  }
                />
                <sectionItem
                  action={[Function]}
                  actionType="select"
                  actionValue="0"
                  label={
                    <InjectIntl(FormattedText)
                      defaultMessage="Never"
                      id="user.settings.notifications.email.never"
                    />
                  }
                  selected={false}
                  theme={
                    Object {
                      "centerChannelBg": "#aaa",
                      "centerChannelColor": "#aaa",
                    }
                  }
                />
              </Component>
            </section>,
            "contentContainerStyle": Object {
              "paddingVertical": 35,
            },
            "style": Object {
              "backgroundColor": undefined,
              "flex": 1,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <Component>
                  <sectionItem
                    action={[Function]}
                    actionType="select"
                    actionValue="30"
                    label={
                      <InjectIntl(FormattedText)
                        defaultMessage="Immediately"
                        id="user.settings.notifications.email.immediately"
                      />
                    }
                    selected={true}
                    theme={
                      Object {
                        "centerChannelBg": "#aaa",
                        "centerChannelColor": "#aaa",
                      }
                    }
                  />
                  <Component
                    style={
                      Object {
                        "backgroundColor": undefined,
                        "flex": 1,
                        "height": 1,
                        "marginLeft": 15,
                      }
                    }
                  />
                  <sectionItem
                    action={[Function]}
                    actionType="select"
                    actionValue="0"
                    label={
                      <InjectIntl(FormattedText)
                        defaultMessage="Never"
                        id="user.settings.notifications.email.never"
                      />
                    }
                    selected={false}
                    theme={
                      Object {
                        "centerChannelBg": "#aaa",
                        "centerChannelColor": "#aaa",
                      }
                    }
                  />
                </Component>,
                false,
              ],
              "disableFooter": false,
              "footerDefaultMessage": "Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes.",
              "footerId": "user.settings.notifications.emailInfo",
              "footerValues": Object {
                "siteName": "Mattermost",
              },
              "headerDefaultMessage": "SEND EMAIL NOTIFICATIONS",
              "headerId": "mobile.notification_settings.email.send",
              "theme": Object {
                "centerChannelBg": "#aaa",
                "centerChannelColor": "#aaa",
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <sectionItem
                      action={[Function]}
                      actionType="select"
                      actionValue="30"
                      label={
                        <InjectIntl(FormattedText)
                          defaultMessage="Immediately"
                          id="user.settings.notifications.email.immediately"
                        />
                      }
                      selected={true}
                      theme={
                        Object {
                          "centerChannelBg": "#aaa",
                          "centerChannelColor": "#aaa",
                        }
                      }
                    />,
                    <Component
                      style={
                        Object {
                          "backgroundColor": undefined,
                          "flex": 1,
                          "height": 1,
                          "marginLeft": 15,
                        }
                      }
                    />,
                    false,
                    <sectionItem
                      action={[Function]}
                      actionType="select"
                      actionValue="0"
                      label={
                        <InjectIntl(FormattedText)
                          defaultMessage="Never"
                          id="user.settings.notifications.email.never"
                        />
                      }
                      selected={false}
                      theme={
                        Object {
                          "centerChannelBg": "#aaa",
                          "centerChannelColor": "#aaa",
                        }
                      }
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "action": [Function],
                      "actionType": "select",
                      "actionValue": "30",
                      "label": <InjectIntl(FormattedText)
                        defaultMessage="Immediately"
                        id="user.settings.notifications.email.immediately"
                      />,
                      "selected": true,
                      "theme": Object {
                        "centerChannelBg": "#aaa",
                        "centerChannelColor": "#aaa",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "style": Object {
                        "backgroundColor": undefined,
                        "flex": 1,
                        "height": 1,
                        "marginLeft": 15,
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  false,
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "action": [Function],
                      "actionType": "select",
                      "actionValue": "0",
                      "label": <InjectIntl(FormattedText)
                        defaultMessage="Never"
                        id="user.settings.notifications.email.never"
                      />,
                      "selected": false,
                      "theme": Object {
                        "centerChannelBg": "#aaa",
                        "centerChannelColor": "#aaa",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              false,
            ],
            "type": [Function],
          },
          "type": [MockFunction],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`NotificationSettingsEmail should match snapshot, renderEmailSection 1`] = `
<section
  disableFooter={false}
  footerDefaultMessage="Email notifications are sent for mentions and direct messages when you are offline or away from {siteName} for more than 5 minutes."
  footerId="user.settings.notifications.emailInfo"
  footerValues={
    Object {
      "siteName": "Mattermost",
    }
  }
  headerDefaultMessage="SEND EMAIL NOTIFICATIONS"
  headerId="mobile.notification_settings.email.send"
  theme={
    Object {
      "centerChannelBg": "#aaa",
      "centerChannelColor": "#aaa",
    }
  }
>
  <Component>
    <sectionItem
      action={[Function]}
      actionType="select"
      actionValue="30"
      label={
        <InjectIntl(FormattedText)
          defaultMessage="Immediately"
          id="user.settings.notifications.email.immediately"
        />
      }
      selected={true}
      theme={
        Object {
          "centerChannelBg": "#aaa",
          "centerChannelColor": "#aaa",
        }
      }
    />
    <Component
      style={
        Object {
          "backgroundColor": undefined,
          "flex": 1,
          "height": 1,
          "marginLeft": 15,
        }
      }
    />
    <sectionItem
      action={[Function]}
      actionType="select"
      actionValue="0"
      label={
        <InjectIntl(FormattedText)
          defaultMessage="Never"
          id="user.settings.notifications.email.never"
        />
      }
      selected={false}
      theme={
        Object {
          "centerChannelBg": "#aaa",
          "centerChannelColor": "#aaa",
        }
      }
    />
  </Component>
</section>
`;
