// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchResultPost should match snapshot 1`] = `
SearchResultPost {
  "context": Object {},
  "props": Object {
    "goToThread": [MockFunction],
    "highlightPinnedOrFlagged": false,
    "intl": Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    },
    "isDeleted": false,
    "managedConfig": Object {},
    "onHashtagPress": [MockFunction],
    "onPermalinkPress": [MockFunction],
    "postId": "post-id",
    "previewPost": [MockFunction],
    "showFullDate": false,
    "skipFlaggedHeader": false,
    "skipPinnedHeader": false,
  },
  "refs": Object {},
  "setState": [Function],
  "state": null,
  "updater": Updater {
    "_callbacks": Array [],
    "_renderer": ReactShallowRenderer {
      "_context": Object {},
      "_didScheduleRenderPhaseUpdate": false,
      "_dispatcher": Object {
        "readContext": [Function],
        "useCallback": [Function],
        "useContext": [Function],
        "useDebugValue": [Function],
        "useDeferredValue": [Function],
        "useEffect": [Function],
        "useImperativeHandle": [Function],
        "useLayoutEffect": [Function],
        "useMemo": [Function],
        "useReducer": [Function],
        "useRef": [Function],
        "useResponder": [Function],
        "useState": [Function],
        "useTransition": [Function],
      },
      "_element": <SearchResultPost
        goToThread={[MockFunction]}
        highlightPinnedOrFlagged={false}
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          }
        }
        isDeleted={false}
        managedConfig={Object {}}
        onHashtagPress={[MockFunction]}
        onPermalinkPress={[MockFunction]}
        postId="post-id"
        previewPost={[MockFunction]}
        showFullDate={false}
        skipFlaggedHeader={false}
        skipPinnedHeader={false}
      />,
      "_firstWorkInProgressHook": null,
      "_forcedUpdate": false,
      "_instance": [Circular],
      "_isReRender": false,
      "_newState": null,
      "_numberOfReRenders": 0,
      "_renderPhaseUpdates": null,
      "_rendered": <Connect(Post)
        highlightPinnedOrFlagged={false}
        isSearchResult={true}
        managedConfig={Object {}}
        onHashtagPress={[MockFunction]}
        onPermalinkPress={[MockFunction]}
        onPress={[MockFunction]}
        onReply={[MockFunction]}
        postId="post-id"
        shouldRenderReplyButton={true}
        showAddReaction={false}
        showFullDate={false}
        skipFlaggedHeader={false}
        skipPinnedHeader={false}
        testID="search_result_post.post.post-id"
      />,
      "_rendering": false,
      "_updater": [Circular],
      "_workInProgressHook": null,
    },
  },
}
`;
