// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`thread should match snapshot, has root post 1`] = `
<React.Fragment>
  <Connect(SafeAreaIos)
    excludeHeader={true}
    forceInsets={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "height": 1,
        }
      }
    />
    <Connect(StatusBar) />
    <React.Fragment>
      <ForwardRef(AnimatedComponentWrapper)
        style={
          Object {
            "flex": 1,
            "paddingBottom": 0,
          }
        }
      >
        <Connect(PostList)
          currentUserId="member_user_id"
          indicateNewMessages={false}
          lastPostIndex={2}
          lastViewedAt={0}
          location="thread"
          onPostPress={[Function]}
          postIds={
            Array [
              "root_id",
              "post_id_1",
              "post_id_2",
            ]
          }
          renderFooter={
            <Loading
              color="#3d3c40"
              size="large"
              style={Object {}}
            />
          }
          scrollViewNativeID="threadPostList"
        />
      </ForwardRef(AnimatedComponentWrapper)>
    </React.Fragment>
  </Connect(SafeAreaIos)>
  <Connect(PostDraft)
    accessoriesContainerID="threadAccessoriesContainer"
    channelId="channel_id"
    channelIsArchived={false}
    cursorPositionEvent="onThreadTextBoxCursorChange"
    registerTypingAnimation={[Function]}
    rootId="root_id"
    scrollViewNativeID="threadPostList"
    valueEvent="onThreadTextBoxValueChange"
  />
  <View
    nativeID="threadAccessoriesContainer"
  >
    <Connect(Autocomplete)
      channelId="channel_id"
      cursorPositionEvent="onThreadTextBoxCursorChange"
      maxHeight={200}
      onChangeText={[Function]}
      rootId="root_id"
      valueEvent="onThreadTextBoxValueChange"
    />
  </View>
</React.Fragment>
`;

exports[`thread should match snapshot, no root post, loading 1`] = `
<React.Fragment>
  <Connect(SafeAreaIos)
    excludeHeader={true}
    forceInsets={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "height": 1,
        }
      }
    />
    <Connect(StatusBar) />
    <Loading
      color="#3d3c40"
      size="large"
      style={Object {}}
    />
  </Connect(SafeAreaIos)>
  <View
    nativeID="threadAccessoriesContainer"
  >
    <Connect(Autocomplete)
      channelId="channel_id"
      cursorPositionEvent="onThreadTextBoxCursorChange"
      maxHeight={200}
      onChangeText={[Function]}
      rootId="root_id"
      valueEvent="onThreadTextBoxValueChange"
    />
  </View>
</React.Fragment>
`;

exports[`thread should match snapshot, render footer 1`] = `
<Connect(PostList)
  currentUserId="member_user_id"
  indicateNewMessages={false}
  lastPostIndex={2}
  lastViewedAt={0}
  location="thread"
  onPostPress={[Function]}
  postIds={
    Array [
      "root_id",
      "post_id_1",
      "post_id_2",
    ]
  }
  renderFooter={
    <Loading
      color="#3d3c40"
      size="large"
      style={Object {}}
    />
  }
  scrollViewNativeID="threadPostList"
/>
`;

exports[`thread should match snapshot, render footer 2`] = `
<Connect(PostList)
  currentUserId="member_user_id"
  indicateNewMessages={false}
  lastPostIndex={2}
  lastViewedAt={0}
  location="thread"
  onPostPress={[Function]}
  postIds={
    Array [
      "root_id",
      "post_id_1",
      "post_id_2",
    ]
  }
  renderFooter={null}
  scrollViewNativeID="threadPostList"
/>
`;

exports[`thread should match snapshot, render footer 3`] = `
<React.Fragment>
  <Connect(SafeAreaIos)
    excludeHeader={true}
    forceInsets={true}
  >
    <View
      style={
        Object {
          "backgroundColor": "rgba(61,60,64,0.2)",
          "height": 1,
        }
      }
    />
    <Connect(StatusBar) />
    <Loading
      color="#3d3c40"
      size="large"
      style={Object {}}
    />
  </Connect(SafeAreaIos)>
  <View
    nativeID="threadAccessoriesContainer"
  >
    <Connect(Autocomplete)
      channelId="channel_id"
      cursorPositionEvent="onThreadTextBoxCursorChange"
      maxHeight={200}
      onChangeText={[Function]}
      rootId="root_id"
      valueEvent="onThreadTextBoxValueChange"
    />
  </View>
</React.Fragment>
`;
